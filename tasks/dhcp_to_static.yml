---
- name: check if VM is reachable on known ip address
  command: ping -c1 {{ vm_ip }}
  register: ping_result
  ignore_errors: yes

- debug:
    msg: |
      DEVICE={{ vm_nic }}
      HWADDR={{ vm_mac }}
      IPADDR={{ vm_ip }}
      GATEWAY={{ vm_gateway }}
      PREFIX={{ vm_mask_prefix }}
    verbosity: 2
    
- name: shutting down {{ vm_name }} to run virt-customize
  shell: |
    result=$(virsh dominfo --domain {{ vm_name }}| awk '/State/ {print $2}')
    if [ $result == 'shut' ];
    then
       echo "shutoff"
    else
      virsh shutdown {{ vm_name }};
    fi
  register: vm_shutdown_status
  until: vm_shutdown_status.stdout.find('shutoff') != -1
  retries: 18
  delay: 3
  when: (ping_result is failed and static_ip|bool) or vm_ip_differ|bool

- name: remove cloud-init from {{ vm_name }}
  command: >
    virt-customize -a {{ os_disk }} --uninstall cloud-init
  when: (ping_result is failed and static_ip|bool) or vm_ip_differ|bool
  
- name: set VM static ip based on user provided value
  command: >
    virt-customize -a {{ os_disk }} --upload {{ vm_ifcfg }}:/etc/sysconfig/network-scripts/ifcfg-{{ vm_nic }}
  register: uploaded_static_ip
  when: (ping_result is failed and static_ip|bool) or vm_ip_differ|bool

- name: starting up {{ vm_name }}
  virt:
    name: "{{ vm_name }}"
    state: running
  when: (ping_result is failed and static_ip|bool) or vm_ip_differ|bool

- name: Wait for network connectivty to {{ vm_name }}
  wait_for:
    host: "{{ vm_ipaddress }}"
    port: 22
    search_regex: OpenSSH
    delay: 10
  when: (ping_result is failed and static_ip|bool) or vm_ip_differ|bool
